{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Anderson\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Anderson\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Anderson\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Anderson\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Anderson\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _defineProperty from \"C:\\\\Users\\\\Anderson\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\Users\\\\Anderson\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\dev\\\\bitflix\\\\front-end\\\\src\\\\views\\\\Autenticacao\\\\RecuperarSenha\\\\RecuperarSenha.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Card, CardBody, Col, Container, Form, Input, FormFeedback, InputGroup, InputGroupAddon, InputGroupText, Row } from 'reactstrap';\nimport logo from '../../../assets/img/brand/MeuML-logo2.png';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport './ValidationForms.css';\n\nvar validationSchema = function validationSchema(values) {\n  return Yup.object().shape({\n    email: Yup.string().email('Email informado é inválido').required('Email é Obrigatório!')\n  });\n};\n\nvar validate = function validate(getValidationSchema) {\n  return function (values) {\n    var validationSchema = getValidationSchema(values);\n\n    try {\n      validationSchema.validateSync(values, {\n        abortEarly: false\n      });\n      return {};\n    } catch (error) {\n      return getErrorsFromValidationError(error);\n    }\n  };\n};\n\nvar getErrorsFromValidationError = function getErrorsFromValidationError(validationError) {\n  var FIRST_ERROR = 0;\n  return validationError.inner.reduce(function (errors, error) {\n    return _objectSpread({}, errors, _defineProperty({}, error.path, error.errors[FIRST_ERROR]));\n  }, {});\n};\n\nvar initialValues = {\n  email: \"\"\n};\n\nvar onSubmit = function onSubmit(values, _ref) {\n  var setSubmitting = _ref.setSubmitting,\n      setErrors = _ref.setErrors;\n  setTimeout(function () {\n    alert(JSON.stringify(values, null, 2)); // console.log('O Cadastro foi concluído com Sucesso!', values)\n\n    setSubmitting(false);\n  }, 2000);\n};\n\nvar RecuperarSenha =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RecuperarSenha, _Component);\n\n  function RecuperarSenha() {\n    _classCallCheck(this, RecuperarSenha);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(RecuperarSenha).apply(this, arguments));\n  }\n\n  _createClass(RecuperarSenha, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"app flex-row align-items-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: \"justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Card, {\n        class: \"col-md-12 text-muted py-5 d-md-down-none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: logo,\n        width: \"60%\",\n        class: \"espacoLogoCadastro\",\n        alt: \"MeuML\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      })), React.createElement(Formik, {\n        initialValues: initialValues,\n        validate: validate(validationSchema),\n        onSubmit: onSubmit,\n        render: function render(_ref2) {\n          var values = _ref2.values,\n              errors = _ref2.errors,\n              touched = _ref2.touched,\n              status = _ref2.status,\n              dirty = _ref2.dirty,\n              handleChange = _ref2.handleChange,\n              handleBlur = _ref2.handleBlur,\n              handleSubmit = _ref2.handleSubmit,\n              isSubmitting = _ref2.isSubmitting,\n              isValid = _ref2.isValid,\n              handleReset = _ref2.handleReset,\n              setTouched = _ref2.setTouched;\n          return React.createElement(Form, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81\n            },\n            __self: this\n          }, React.createElement(\"h2\", {\n            class: \"tituloLogin\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82\n            },\n            __self: this\n          }, \"Recuperar Senha\"), React.createElement(\"p\", {\n            class: \"alert alert-warning fade show\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83\n            },\n            __self: this\n          }, \"Ser\\xE1 enviado para o \", React.createElement(\"b\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83\n            },\n            __self: this\n          }, \"e-mail informado abaixo\"), \" as instru\\xE7\\xF5es e informa\\xE7\\xF5es de recupera\\xE7\\xE3o de senha.\"), React.createElement(InputGroup, {\n            className: \"mb-3\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84\n            },\n            __self: this\n          }, React.createElement(InputGroupAddon, {\n            addonType: \"prepend\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85\n            },\n            __self: this\n          }, React.createElement(InputGroupText, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86\n            },\n            __self: this\n          }, React.createElement(\"i\", {\n            className: \"fa fa-at\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87\n            },\n            __self: this\n          }))), React.createElement(Input, {\n            type: \"email\",\n            name: \"email\",\n            id: \"email\",\n            placeholder: \"E-mail\",\n            autoComplete: \"email\",\n            valid: !errors.email,\n            invalid: touched.email && !!errors.email,\n            required: true,\n            onChange: handleChange,\n            onBlur: handleBlur,\n            value: values.email,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90\n            },\n            __self: this\n          }), React.createElement(FormFeedback, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 101\n            },\n            __self: this\n          }, errors.email)), React.createElement(Row, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 103\n            },\n            __self: this\n          }, React.createElement(Col, {\n            xs: \"12\",\n            className: \"text-center\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 104\n            },\n            __self: this\n          }, React.createElement(Link, {\n            to: \"/avisorecuperarsenha\",\n            params: {\n              email: email.value\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 105\n            },\n            __self: this\n          }, React.createElement(Button, {\n            type: \"submit\",\n            color: \"primary\",\n            disabled: isSubmitting || !isValid,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 106\n            },\n            __self: this\n          }, isSubmitting ? 'Aguarde...' : 'Enviar solicitação')))));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }))))))));\n    }\n  }]);\n\n  return RecuperarSenha;\n}(Component);\n\nexport default RecuperarSenha;","map":{"version":3,"sources":["C:\\dev\\bitflix\\front-end\\src\\views\\Autenticacao\\RecuperarSenha\\RecuperarSenha.js"],"names":["React","Component","Link","Button","Card","CardBody","Col","Container","Form","Input","FormFeedback","InputGroup","InputGroupAddon","InputGroupText","Row","logo","Formik","Yup","validationSchema","values","object","shape","email","string","required","validate","getValidationSchema","validateSync","abortEarly","error","getErrorsFromValidationError","validationError","FIRST_ERROR","inner","reduce","errors","path","initialValues","onSubmit","setSubmitting","setErrors","setTimeout","alert","JSON","stringify","RecuperarSenha","touched","status","dirty","handleChange","handleBlur","handleSubmit","isSubmitting","isValid","handleReset","setTouched","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Card, CardBody, Col, Container, Form, Input, FormFeedback, InputGroup, InputGroupAddon, InputGroupText, Row } from 'reactstrap';\r\nimport logo from '../../../assets/img/brand/MeuML-logo2.png'\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup'\r\nimport './ValidationForms.css'\r\n\r\nconst validationSchema = function (values) {\r\n  return Yup.object().shape({\r\n    email: Yup.string()\r\n    .email('Email informado é inválido')\r\n    .required('Email é Obrigatório!'),\r\n  })\r\n}\r\n\r\nconst validate = (getValidationSchema) => {\r\n  return (values) => {\r\n    const validationSchema = getValidationSchema(values)\r\n    try {\r\n      validationSchema.validateSync(values, { abortEarly: false })\r\n      return {}\r\n    } catch (error) {\r\n      return getErrorsFromValidationError(error)\r\n    }\r\n  }\r\n}\r\n\r\nconst getErrorsFromValidationError = (validationError) => {\r\n  const FIRST_ERROR = 0\r\n  return validationError.inner.reduce((errors, error) => {\r\n    return {\r\n      ...errors,\r\n      [error.path]: error.errors[FIRST_ERROR],\r\n    }\r\n  }, {})\r\n}\r\n\r\nconst initialValues = {\r\n  email: \"\",\r\n}\r\n\r\nconst onSubmit = (values, { setSubmitting, setErrors }) => {\r\n  setTimeout(() => {\r\n    alert(JSON.stringify(values, null, 2))\r\n    // console.log('O Cadastro foi concluído com Sucesso!', values)\r\n    setSubmitting(false)\r\n  }, 2000)\r\n}\r\n\r\nclass RecuperarSenha extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"app flex-row align-items-center\">\r\n        <Container>\r\n          <Row className=\"justify-content-center\">\r\n            <Col md=\"6\">\r\n              <Card class=\"col-md-12 text-muted py-5 d-md-down-none\">\r\n                  <CardBody className=\"text-center\">\r\n                    <div>\r\n                      <h2><img src={logo} width=\"60%\" class=\"espacoLogoCadastro\" alt=\"MeuML\" /></h2>\r\n                      <Formik\r\n                      initialValues={initialValues}\r\n                      validate={validate(validationSchema)}\r\n                      onSubmit={onSubmit}\r\n                      render={\r\n                        ({\r\n                          values,\r\n                          errors,\r\n                          touched,\r\n                          status,\r\n                          dirty,\r\n                          handleChange,\r\n                          handleBlur,\r\n                          handleSubmit,\r\n                          isSubmitting,\r\n                          isValid,\r\n                          handleReset,\r\n                          setTouched\r\n                        }) => (\r\n                      <Form>\r\n                      <h2 class=\"tituloLogin\">Recuperar Senha</h2>\r\n                      <p class=\"alert alert-warning fade show\">Será enviado para o <b>e-mail informado abaixo</b> as instruções e informações de recuperação de senha.</p>\r\n                      <InputGroup className=\"mb-3\">\r\n                        <InputGroupAddon addonType=\"prepend\">\r\n                          <InputGroupText>\r\n                            <i className=\"fa fa-at\"></i>\r\n                          </InputGroupText>\r\n                        </InputGroupAddon>\r\n                        <Input type=\"email\"\r\n                                name=\"email\"\r\n                                 id=\"email\"\r\n                                 placeholder=\"E-mail\"\r\n                                 autoComplete=\"email\"\r\n                                 valid={!errors.email}\r\n                                 invalid={touched.email && !!errors.email}\r\n                                 required\r\n                                 onChange={handleChange}\r\n                                 onBlur={handleBlur}\r\n                                 value={values.email} />\r\n                                 <FormFeedback>{errors.email}</FormFeedback>  \r\n                      </InputGroup>\r\n                      <Row>\r\n                        <Col xs=\"12\" className=\"text-center\">\r\n                        <Link to=\"/avisorecuperarsenha\" params={{ email : email.value }}>\r\n                        <Button type=\"submit\" color=\"primary\" disabled={isSubmitting || !isValid}>{isSubmitting ? 'Aguarde...' : 'Enviar solicitação'}</Button>\r\n                          </Link>\r\n                        </Col>\r\n                      </Row>\r\n                    </Form>\r\n                     )} />\r\n                    </div>\r\n                  </CardBody>\r\n                </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RecuperarSenha;\r\n"]},"metadata":{},"sourceType":"module"}